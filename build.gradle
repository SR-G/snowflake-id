// === Imports
apply plugin: 'java'
apply plugin: 'eclipse'

// === Variables
sourceCompatibility = 1.7
version = '1.0.0-SNAPSHOT'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// === Repositories
repositories {
	mavenCentral()
}

jar {
	manifest {
		attributes 'Implementation-Title': 'snowflake-id'
		attributes 'Implementation-Version': version
        attributes 'Source-Compatibility': project.sourceCompatibility
        attributes 'Target-Compatibility': project.targetCompatibility
        attributes 'Built-JDK': System.getProperty('java.version')
        attributes 'Built-Date': new Date()
	}
}

configurations {
    all*.exclude group: 'stax', module: 'stax-api'
    all*.exclude group: 'stax', module: 'stax'
    all*.exclude group: 'org.slf4j', module: 'slf-jul'
    all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
    all*.exclude group: 'org.slf4j', module: 'jcl-over-slf'
    all*.exclude group: 'xpp3', module: 'xpp3'
}

dependencies {
    compile 'org.apache.logging.log4j:log4j-api:2.5'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.5'
    compile 'org.apache.logging.log4j:log4j-1.2-api:2.5'
    compile 'org.apache.logging.log4j:log4j-jcl:2.5'
    compile 'org.apache.logging.log4j:log4j-jul:2.5'
    
    // compile 'org.apache.commons:commons-lang3:3.4'
    compile 'junit:junit:4.12'
    compile 'com.google.guava:guava:19.0'
}

sourceSets {
	main {
		java { srcDir 'src/main/run/' }
		resources {
			srcDir 'src/main/java'
			srcDir 'src/main/resources'
		}
	}
}

// === Eclipse configuration
eclipse {
	classpath {
		downloadSources = true
		downloadJavadoc = true
	}
}

eclipse.jdt.file.beforeMerged { jdt ->
	// Load general jdt prefs
	println("Updating eclipse settings")
	jdt.load(file('.eclipse/org.eclipse.jdt.core.prefs'))
}

task eclipseSettings(type: Copy) {
	println("Restoring UI prefs")
	from rootProject.files(".eclipse/org.eclipse.jdt.ui.prefs", ".eclipse/org.eclipse.core.resources.prefs", ".eclipse/org.eclipse.core.runtime.prefs")
	into project.file('.settings/')
	outputs.upToDateWhen { false }
}

tasks["eclipse"].dependsOn(eclipseSettings)
